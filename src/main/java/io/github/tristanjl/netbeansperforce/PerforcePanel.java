/*
 * The MIT License
 *
 * Copyright 2020 tristanjl.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package io.github.tristanjl.netbeansperforce;

import java.io.File;
import javax.swing.JFileChooser;
import org.apache.commons.lang3.SystemUtils;
import org.openide.util.NbPreferences;

final class PerforcePanel extends javax.swing.JPanel {

    private final PerforceOptionsPanelController controller;

    PerforcePanel(PerforceOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        p4Label = new javax.swing.JLabel();
        p4vcLabel = new javax.swing.JLabel();
        p4TextField = new javax.swing.JFormattedTextField();
        p4vcTextField = new javax.swing.JFormattedTextField();
        p4PathButton = new javax.swing.JButton();
        p4vcPathButton = new javax.swing.JButton();

        fileChooser.setDialogTitle(org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.fileChooser.dialogTitle")); // NOI18N
        fileChooser.setFileFilter(new ExecutableFilter());

        org.openide.awt.Mnemonics.setLocalizedText(p4Label, org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.p4Label.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(p4vcLabel, org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.p4vcLabel.text")); // NOI18N

        p4TextField.setText(org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.p4TextField.text")); // NOI18N

        p4vcTextField.setText(org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.p4vcTextField.text")); // NOI18N
        p4vcTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p4vcTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(p4PathButton, org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.p4PathButton.text")); // NOI18N
        p4PathButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                p4PathButtonMouseReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(p4vcPathButton, org.openide.util.NbBundle.getMessage(PerforcePanel.class, "PerforcePanel.p4vcPathButton.text")); // NOI18N
        p4vcPathButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                p4vcPathButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p4Label)
                    .addComponent(p4vcLabel))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(p4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p4PathButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(p4vcTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(p4vcPathButton)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p4Label)
                    .addComponent(p4TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p4PathButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p4vcLabel)
                    .addComponent(p4vcTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p4vcPathButton))
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void p4PathButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p4PathButtonMouseReleased
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            p4TextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_p4PathButtonMouseReleased

    private void p4vcPathButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p4vcPathButtonMouseReleased
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            File file = fileChooser.getSelectedFile();
            p4vcTextField.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_p4vcPathButtonMouseReleased

    private void p4vcTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p4vcTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p4vcTextFieldActionPerformed

    class ExecutableFilter extends javax.swing.filechooser.FileFilter
    {
        @Override
        public boolean accept(File file)
        {
            return !file.getAbsolutePath().contains(".") || file.getAbsolutePath().endsWith(".exe");
        }
        @Override
        public String getDescription()
        {
            return "Executables";
        }
    }
    
    
    void load()
    {
        p4TextField.setText(PerforceAction.getCurrentP4Path());
        p4vcTextField.setText(PerforceAction.getCurrentP4VCPath());
    }

    void store()
    {
        NbPreferences.forModule(Perforce.class).put("p4Path", p4TextField.getText());
        NbPreferences.forModule(Perforce.class).put("p4vcPath", p4vcTextField.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel p4Label;
    private javax.swing.JButton p4PathButton;
    private javax.swing.JFormattedTextField p4TextField;
    private javax.swing.JLabel p4vcLabel;
    private javax.swing.JButton p4vcPathButton;
    private javax.swing.JFormattedTextField p4vcTextField;
    // End of variables declaration//GEN-END:variables
}
